feat: Add file output support and comprehensive ERC20/DeFi security playbooks

Major features added:

1. File Output Functionality
   - Save audit reports to .txt, .json, or .sarif files
   - Configure via hardhat.config.ts or environment variables
   - Automatic file extension handling and ANSI code stripping
   - Simultaneous console display and file output

2. Comprehensive Security Playbooks
   - ERC20 Token Security (15+ checks with AI enhancement)
   - Complete DeFi Security (20+ universal checks)
   - Dynamic testing scenarios and fuzzing (5K-10K runs)
   - Cross-contract attack scenarios and invariant checking
   - Discovered critical unprotected mint() in ExampleToken.sol

3. AI Enhancement Display Fix
   - Fixed bug where AI-enhanced issues weren't displayed
   - Reduced API costs by 90% (security issues only)
   - AI analysis now shows: explanation, fix, risk score, confidence

Changes:
- src/tasks/analyze.ts: Add file output support and fix AI enhancement
- src/type-extensions.ts: Add output parameter to config types
- src/config.ts: Add output to resolved config
- src/ai/llm-client.ts: Switch to gpt-4o-mini for cost optimization
- src/rules/ai-enhanced-rule.ts: Add smart filtering for security issues
- playbooks/erc20-token-security.yaml: NEW - ERC20 token audit rules
- playbooks/complete-defi-security.yaml: NEW - Full DeFi project audit
- FILE-OUTPUT-EXAMPLES.md: NEW - File output usage guide
- PLAYBOOK-GUIDE.md: NEW - Comprehensive playbook documentation
- EXAMPLETOKEN-PLAYBOOK-IMPLEMENTATION.md: NEW - Implementation summary
- README.md, USAGE.md, QUICK-REFERENCE.md: Updated with new features

Testing:
✅ File output validated (txt, json, sarif formats)
✅ ERC20 playbook detected critical mint() vulnerability
✅ AI enhancement properly displayed in reports
✅ 90% cost reduction achieved

Breaking Changes: None (backward compatible)

Closes: File output feature request, AI display bug, playbook implementation
